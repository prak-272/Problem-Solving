/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    vector<string> ans;
    string traversal;

    void path(TreeNode* node,string traversal){
        if(node->left == NULL && node->right == NULL){
            traversal += to_string(node->val);

            ans.push_back(traversal);
            return;
        }
        
        traversal += to_string(node->val) + "->";

        if(node->left != NULL)path(node->left,traversal);
        if(node->right != NULL)path(node->right,traversal);

    }


    vector<string> binaryTreePaths(TreeNode* root) {
        
        path(root,{});

        return ans;

    }
};
