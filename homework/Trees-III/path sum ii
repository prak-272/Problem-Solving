/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    vector<vector<int>> res; 
    
    void path(TreeNode* node,int s,vector<int>& ans) {
        if(node->left == NULL && node->right == NULL){
            if(s == node->val){
                ans.push_back(node->val);
                res.push_back(ans);
            }

            ans.pop_back();

            return;
        }

        ans.push_back(node->val);

        if(node->left)path(node->left,s-(node->val),ans);
        if(node->right)path(node->right,s-(node->val),ans);

        ans.pop_back();
    }

    vector<vector<int>> pathSum(TreeNode* root, int s) {
        
        if(root == NULL)return {};

        vector<int> ans;
        path(root,s,ans);
        
        return res;

    }
};
