/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool hasPathSum(TreeNode* root, int targetSum) {
        if(root == NULL)return false;

        cout << targetSum << " ";
        
        if(root->left == NULL && root->right == NULL){
            if(targetSum-(root->val) == 0)return true;
            else return false;
        }
        
        bool r = hasPathSum(root->right,targetSum-(root->val));
        bool l = hasPathSum(root->left,targetSum-(root->val));

        return (r || l); 
    }
};
