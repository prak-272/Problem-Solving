class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        
        int inf = 1e5;

        vector<vector<int>> dist(n,vector<int> (n,inf));

        for(int i=0;i<n;i++)
         dist[i][i] = 0;

        for(auto p:edges){
            dist[p[0]][p[1]] = p[2];
            dist[p[1]][p[0]] = p[2];
        }  

        for(int i=0;i<n;i++){
            for(int s=0;s<n;s++){
                for(int d=0;d<n;d++){
                    dist[s][d] = min(dist[s][i] + dist[i][d],dist[s][d]);
                }
            }
        }

        vector<int> count(n,0);

        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(dist[i][j] <= distanceThreshold)
                 count[i]++;
            }
        }

        int mini = *min_element(count.begin(),count.end());

        int solution = -1;

        for(int i=0;i<n;i++){
            if(count[i] == mini)
             solution = i;
        }

        return solution;

    }
};
