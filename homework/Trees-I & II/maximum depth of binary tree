/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

// Recursion

class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(root == NULL)return 0;
        if(root->left == NULL && root->right == NULL)return 1;

        return 1 + max(maxDepth(root->right),maxDepth(root->left));
    }
};

// Level Order Traversal

class Solution {
public:
    int maxDepth(TreeNode* root) {
       
       if(root == NULL)return 0;

       int level = 0;

       queue<TreeNode*> q;
       q.push(root);

       while(!q.empty()){
           int k = q.size();
           level++;

           for(int i=0;i<k;i++){
              TreeNode* node = q.front();

              q.pop();

              if(node->left)q.push(node->left);
              if(node->right)q.push(node->right);
           }
    
       }

       return level;

    }
};
