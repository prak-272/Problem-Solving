/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    map<int,map<int,multiset<int>>> mp;

    void traversal(TreeNode* node,int x,int y){
        if(node == NULL)return;

        mp[x][y].insert(node->val);

        traversal(node->left,x-1,y+1);
        traversal(node->right,x+1,y+1);
    }
    
    vector<vector<int>> verticalTraversal(TreeNode* root) {

        vector<vector<int>> res;

        traversal(root,0,0);

        for(auto i:mp){
            vector<int> sol;
            for(auto it:i.second){
                while(it.second.size() != 0){
                  auto itr = it.second.begin();

                  sol.push_back(*itr);
                  it.second.erase(itr);
                }  
            }
            res.push_back(sol);
        }

        return res;


    }
};
