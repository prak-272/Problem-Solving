/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int ele1;
    int ele2;

    bool flag = false;

    TreeNode* prev = NULL;

    void repl_element(TreeNode* node){

         if(node == NULL)return; 

         repl_element(node->left);

         if(node->val == ele1)
            node->val = ele2;
         else if(node->val == ele2)
            node->val = ele1;   
    
         repl_element(node->right);  

    }

    void find_element(TreeNode* node){
        
        if(node == NULL)return;

        find_element(node->left);

        if(prev != NULL){
            if(node->val < prev->val){
               if(flag == false)
                 ele1 = prev->val;

               ele2 = node->val;
               flag = true;  
            }
        }

        prev = node;

        find_element(node->right);

    }
    
    void recoverTree(TreeNode* root) {
        
        find_element(root);

        repl_element(root);

    }
};
