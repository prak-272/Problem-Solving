class Solution {
public:
    int lengthOfLongestSubsequence(vector<int>& nums, int target) {
        
        int inf = 1e6;

        int n = nums.size();

        vector<vector<int>> dp(n+1,vector<int> (target+1,0));

        for(int i=0;i<n+1;i++)
         dp[i][0] = 0;

        for(int j=1;j<target+1;j++)
          dp[n][j] = -inf;

        for(int i=n-1;i>=0;i--){
            for(int j=1;j<target+1;j++){
                if(j - nums[i] >= 0)
                 dp[i][j] = max(dp[i+1][j-nums[i]]+1,dp[i+1][j]);
                else
                  dp[i][j] = dp[i+1][j];
            }
        }   
       
        return ((dp[0][target]) >= 1?dp[0][target]:-1);
           

    }
};
