class Solution {
public:
    
    /*
    int w_match(int i,int j,string& s,string& p,vector<vector<int>>& dp){
        
        int n = s.size();
        int m = p.size();

        if(i == n && j == m)
         return 1;
        if(i == n)
         return (p[j] == '*' &&  w_match(i,j+1,s,p,dp));
        if(j == m)
         return 0; 

        if(dp[i][j] != -1)
         return dp[i][j]; 


        if(s[i] == p[j] || p[j] == '?')
         return dp[i][j] = w_match(i+1,j+1,s,p,dp);
        else if(p[j] == '*')
         return dp[i][j] =(w_match(i+1,j,s,p,dp) || w_match(i,j+1,s,p,dp)); 
        else 
         return 0; 

    }
    */

    // return (w_match(0,0,s,p,dp) == 1);
    
    bool isMatch(string s, string p) {

        int n = s.size();
        int m = p.size();

        vector<vector<bool>> dp(n+1,vector<bool> (m+1,false));

        dp[n][m] = true;

        for(int i=0;i<n;i++)
         dp[i][m] = false;

        bool flag = true; 

        for(int j=m-1;j>=0;j--){
            if(p[j] != '*')
             flag = false;

            dp[n][j] = flag;  
        } 

        for(int i=n-1;i>=0;i--){
            for(int j=m-1;j>=0;j--){
                if(s[i] == p[j] || p[j] == '?')
                 dp[i][j] = dp[i+1][j+1];
                else if(p[j] == '*')
                 dp[i][j] = dp[i+1][j] || dp[i][j+1];
                else
                 dp[i][j] = false;
            }
        } 

        return dp[0][0];

    }
};
